import google.generativeai as genai
import time
import numpy as np
import os
import re
import random
import json

# --- КОНФИГУРАЦИЯ ---
# Вставьте сюда ваш API ключ от Google AI Studio
API_KEY = os.getenv('AI_API_KEY', 'ВАШ_API_КЛЮЧ')

# Настройка использования обсценной лексики
ALLOW_MATURE_LANGUAGE = True  # Разрешить использование сильной лексики если это соответствует миру

# Вставьте ваш синопсис здесь
SYNOPSIS = """
В 2025 году в Санкт-Петербурге следователь-оборотень Петр Иванов должен раскрыть серию ужасных убийств, совершенных котами-людоедами, чтобы остановить зловещий заговор заместителя губернатора Дмитрия Говорова, пока его собственная звериная сущность не поглотила его.

Ключевые персонажи:
    Петр Алексеевич Иванов: 40 лет, следователь, главный герой, волк-оборотень. Его первоначальная роль — расследовать преступления.
    Дмитрий Степанович Говоров: Заместитель губернатора, главный злодей. Его первоначальная роль — высокопоставленный чиновник, скрывающий свою истинную природу и мотивы.
    Анна: 35 лет, девушка Петра Иванова, художник

Сеттинг:
    Время: 2025 год. Это позволяет использовать современные технологии и реалии, но также добавляет элемент футуризма или технологического упадка, если это будет необходимо для атмосферы.
    Место: Санкт-Петербург. Город со своей уникальной архитектурой, мистической атмосферой, каналами и туманами, что идеально подходит для хоррора.
    Ключевые особенности мира: Существование оборотней (Петр Иванов) и котов-людоедов. Это указывает на скрытый мир сверхъестественного, который сосуществует с обыденной реальностью. Важно, насколько обыденным или необычным является знание об этих существах для широкой публики и для самого Петра.

"""

def log_chapter(kind, number, text):
    f = open(f"chapter_{kind}_{number:02}.md", "w")
    f.write(text)
    f.close()

# Укажите желаемое количество глав
NUM_CHAPTERS = 12
# --- КОНЕЦ КОНФИГУРАЦИИ ---

SAFETY_SETTINGS = [
        {
            "category": "HARM_CATEGORY_HARASSMENT",
            "threshold": "BLOCK_NONE"
        },
        {
            "category": "HARM_CATEGORY_HATE_SPEECH",
            "threshold": "BLOCK_NONE"
        },
        {
            "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
            "threshold": "BLOCK_NONE"
        },
        {
            "category": "HARM_CATEGORY_DANGEROUS_CONTENT",
            "threshold": "BLOCK_NONE"
        }
    ]


class NovelGenerator:
    """
    Класс для автоматической генерации романа с использованием Gemini API.
    Реализует DAG-пайплайн: Фундамент -> План -> Черновик -> Редактура.
    """
    def __init__(self, api_key, model_name="gemini-2.5-pro"):
        genai.configure(api_key=api_key)
        # Создаем базовую модель без system instruction
        self.base_model = genai.GenerativeModel(model_name)
        # Модель с "библией мира" будет создана после create_foundation
        self.world_model = None
        self.world_bible = {}
        self.scenes = []

    def _create_world_model(self):
        """Создает модель с system instruction, содержащей всю 'Библию Мира'."""
        world_context = f"""
Ты — специализированный писательский ассистент для работы над конкретным романом.

=== БИБЛИЯ МИРА ===

АНАЛИЗ ПРОИЗВЕДЕНИЯ:
{self.world_bible.get('analysis', '')}

ПЕРСОНАЖИ:
{self.world_bible.get('characters', '')}

СЕТТИНГ:
{self.world_bible.get('setting', '')}

РЕЧЕВЫЕ ПРОФИЛИ ПЕРСОНАЖЕЙ:
{self.world_bible.get('voice_profiles', '')}

СТИЛЬ КНИГИ:
{self.world_bible.get('book_style', '')}

СТИЛИСТИЧЕСКИЕ ПРАВИЛА:
{self.world_bible.get('style', '')}

СТРУКТУРА ГЛАВ:
{self.world_bible.get('chapters', '')}

=== ИНСТРУКЦИИ ===

Ты знаешь этот мир, персонажей и стиль наизусть. В каждом запросе:
1. ВСЕГДА следуй установленному стилю и правилам
2. ВСЕГДА сохраняй характеры персонажей
3. ВСЕГДА учитывай логику мира и сеттинга
4. НЕ ВЫХОДИ за рамки этой вселенной

При работе над каждой задачей учитывай весь контекст выше, даже если он не упоминается в конкретном запросе.
"""
        log_chapter('bible', 0, world_context)
        self.world_model = genai.GenerativeModel(
            model_name="gemini-2.5-pro",
            system_instruction=world_context,
            safety_settings=SAFETY_SETTINGS,
        )
        print("✓ Создана модель с контекстом 'Библии Мира'")

    def _call_gemini(self, prompt_text, attempt_count=3, temperature=0.8, top_p=0.95, top_k=40, use_world_model=False):
        """Надежный вызов API с повторными попытками."""
        print(f"  > Отправка запроса в Gemini...")

        # Выбираем модель: с контекстом мира или базовую
        model = self.world_model if (use_world_model and self.world_model) else self.base_model

        try:
            print(prompt_text)
            generation_config = genai.types.GenerationConfig(
                temperature=temperature,
                top_p=top_p,
                top_k=top_k,
                max_output_tokens=100000,
            )
            response = model.generate_content(prompt_text, generation_config=generation_config, safety_settings=SAFETY_SETTINGS,)
            # Добавлена задержка, чтобы не превышать лимиты запросов
            time.sleep(5)
            print(response.text)
            return response.text
        except Exception as e:
            print(f"   ! Ошибка API: {e}. Попытка {attempt_count}...")
            if attempt_count > 0:
                time.sleep(10)
                return self._call_gemini(prompt_text, attempt_count - 1, temperature, top_p, top_k, use_world_model)
            else:
                print("   ! Не удалось выполнить запрос к API после нескольких попыток.")
                return None

    def create_foundation(self, synopsis):
        """Этап 1: Создание 'Библии Мира'."""
        print("--- ЭТАП 1: Создание 'Библии Мира' ---")

        # 1.1 Декомпозиция синопсиса
        prompt_1_1 = f"""
        Проанализируй синопсис. Выдели:

        1. Основная идея (Logline).
        2. Ключевые персонажи и их роли.
        3. Сеттинг.
        4. Основной конфликт.
        5. Предполагаемая структура сюжета.
        6. Ключевые темы и мотивы.

        Добавь уникальные, неожиданные элементы. Избегай клише.
        2. Персонажи - добавь противоречивость, многогранность героям
        3. Сеттинг - добавь неожиданные детали
        5. Найди 3-5 потенциальных неожиданных поворотов

        Синопсис: "{synopsis}"
        """
        self.world_bible['analysis'] = self._call_gemini(prompt_1_1, temperature=1.0, top_p=0.9, top_k=60)

        json_out = """
        {
            "chapters": [
                {
                    "number": "1",
                    "title": "Глава 1",
                    "scenes": [
                        "Сцена 1. Описание сцены 30-60 слов",
                        "Сцена 2. Описание сцены 30-60 слов",
                        "Сцена 3. Описание сцены 30-60 слов",
                        ...
                    ]
                },
                ....
            ]
        }
        """

        # 1.2 Анкеты персонажей
        prompt_1_2 = f"""
        Создай детальные, ПРОТИВОРЕЧИВЫЕ анкеты ВСЕХ персонажей.
        НЕ СОЗДАВАЙ И НЕ ИЗМЕНЯЙ САМ СПИСОК ПЕРСОНАЖЕЙ.

        Каждый персонаж должен иметь:

        1. Неожиданные черты, противоречащие архетипу
        2. Личные "тики" и манеры
        3. Скрытые мотивации
        4. Уникальные речевые паттерны
        5. Внутренние конфликты
        6. "Слепые пятна" - то, чего они о себе не знают
        7. **ИРРАЦИОНАЛЬНЫЙ ЭЛЕМЕНТ:** Опиши один тип странного, нелогичного поступка или эмоционального срыва, на который способен персонаж в состоянии сильного стресса. Это должно противоречить его обычной логике, но соответствовать его скрытым страхам или желаниям.
        8. **НЕЗАВИСИМАЯ ЦЕЛЬ:** Опиши одну маленькую, личную цель персонажа, не связанную напрямую с основным сюжетом (например, починить старые часы, найти редкую книгу, помириться с сестрой).
        9. **ГЛАВНЫЙ СЕКРЕТ:** Какой у персонажа есть секрет, который он скрывает не только от протагониста, но и ото всех остальных, и который объясняет его иррациональное поведение?

        ВАЖНО: Избегай одномерных "функций". Каждый персонаж - сложная личность.
        Включи: предысторию, цели, психологический портрет и арку развития.

        Синопсис: "{synopsis}"

        Анализ: "{self.world_bible['analysis']}"
        """
        self.world_bible['characters'] = self._call_gemini(prompt_1_2, temperature=0.9, top_p=0.9, top_k=50)

        # 1.3 Детализация мира
        prompt_1_3 = f"""
        На основе анализа синопсиса, детализируй мир романа. Опиши локации,
        социальное устройство, технологии и атмосферу.
        Анализ: "{self.world_bible['analysis']}"
        """
        self.world_bible['setting'] = self._call_gemini(prompt_1_3, temperature=0.7, top_p=0.85, top_k=30)

        # 1.2b Генерация речевых профилей персонажей (voice_profile)
        prompt_1_2b = f"""
        Ты — литературный диалогист. На основе анкет персонажей, сеттинга и синопсиса сгенерируй индивидуальные речевые профили героев.
        Создай ЖИВЫЕ речевые профили. Для каждого персонажа определи:

        1. Любимые словечки и выражения
        2. Как они говорят под стрессом vs в покое
        3. О чем они НИКОГДА не говорят прямо
        4. Их способ шутить (или отсутствие юмора)
        5. Как они перебивают и реагируют на перебивания
        6. Невербальные привычки при разговоре
        Примеры ЖИВЫХ реплик с паузами, оговорками, незаконченными фразами.

        Анкеты персонажей:
        {self.world_bible['characters']}
        Сеттинг:
        {self.world_bible.get('setting', '')}
        """
        self.world_bible['voice_profiles'] = self._call_gemini(prompt_1_2b, temperature=0.9, top_p=0.9, top_k=50)

        # 1.3a Генерация общего стиля книги (book_style)
        prompt_1_3a = f"""
        Ты — литературный стилист. На основе анализа, сеттинга, синопсиса и героев определи единый литературный стиль книги.

        Укажи:
        1. Формальность (разговорный / литературный / архаичный и т.п.)
        2. Тон (циничный, ироничный, депрессивный и т.д.)
        3. Регистр (высокий / низкий)
        4. Точку зрения (1-е лицо, 3-е лицо и т.п.)
        5. Сравнение со стилем известных авторов или направлений
        6. Характерные элементы лексики, синтаксиса
        7. Разрешённый уровень обсценности (если применимо)
        8. Краткий комментарий

        'Библия Мира':
        {self.world_bible}
        """
        self.world_bible['book_style'] = self._call_gemini(prompt_1_3a, temperature=0.6, top_p=0.8, top_k=25)

        # 1.4 Стиль и тон
        prompt_1_4 = f"""
        Определи и опиши стиль, тон и темп повествования для истории на основе этого анализа.
        Укажи точку зрения (например, от третьего лица, ограниченного главным героем).

        {'ВАЖНО: Определи, уместна ли для данного мира и персонажей сильная/обсценная лексика. Если да - укажи это в рекомендациях по стилю.' if ALLOW_MATURE_LANGUAGE else ''}

        Определи стилистические ограничения для избежания "пурпурной прозы":
        1. Максимум 1-2 метафоры на страницу
        2. Запрещенные клише (список)
        3. Предпочтительные сенсорные детали (не только визуальные!)
        4. Баланс между описанием и действием

        Анализ: "{self.world_bible['analysis']}"
        """
        self.world_bible['style'] = self._call_gemini(prompt_1_4, temperature=0.6, top_p=0.8, top_k=25)

        # 1.5 План сюжета (список сцен)
        prompt_1_5 = f"""
        На основе всей 'Библии Мира', создай расширенный план сюжета в виде
        пронумерованного списка из {NUM_CHAPTERS * 3}-{NUM_CHAPTERS * 4} ключевых сцен с разбивкой по {NUM_CHAPTERS} главам,
        которые последовательно раскрывают историю от начала до конца.
        Количество сцен на главу от 2 до 5, может варьироваться для сохранения цельности чтения и сюжета.
        **ВАЖНО: Включи в план как минимум одну "ложную ветку" или "осложнение" — событие, которое кажется главным, но уводит героев
        по неверному пути, прежде чем они вернутся к основной линии сюжета. Это не должно разрушать историю, а делать её более напряженной и непредсказуемой.**

        Строгий формат ответа JSON:
        {json_out}

        'Библия Мира':
        {self.world_bible}
        """
        scene_plan = self._call_gemini(prompt_1_5, temperature=0.7, top_p=0.85, top_k=35)
        scene_plan = scene_plan.replace('```json', '').replace('```', '')
        self.world_bible['chapters'] = json.loads(scene_plan)['chapters']

        # Создаем модель с контекстом после завершения "Библии Мира"
        self._create_world_model()

    def generate_novel(self, num_chapters):
        """Этапы 2-4: Генерация глав в цикле."""
        final_chapters_text = []
        chapter_summaries = []  # Добавляем историю глав

        for i, chapter in enumerate(self.world_bible['chapters']):
            chapter_num = i + 1
            chapter_scenes = chapter['scenes']

            print(f"\n--- ГЕНЕРАЦИЯ ГЛАВЫ {chapter_num}/{num_chapters} ---")

            chapter_scenes_str = "\n".join(chapter_scenes)

            # Формируем контекст предыдущих глав
            previous_context = ""
            if chapter_num > 1:
                # Берем только последние 2-3 главы для экономии токенов
                recent_summaries = chapter_summaries[max(0, len(chapter_summaries)-2):]
                previous_context = f"""

                КОНТЕКСТ ПРЕДЫДУЩИХ ГЛАВ (для согласованности):
                {chr(10).join(recent_summaries)}

                ВАЖНО: Сохраняй преемственность сюжета, развитие персонажей и упомянутые детали.
                """

            # Этап 2: План главы
            print(f"- Этап 2: Планирование Главы {chapter_num}")
            prompt_2 = f"""
            Создай детальный план для Главы {chapter_num}.
            Цель главы - раскрыть следующие сцены:
            ---
            {chapter_scenes_str}
            ---
            План должен включать цель главы, описание сцен, настроение и фокус на деталях.
            Обязательно включи:
            1. **ОСЛОЖНЕНИЕ ИЛИ ОТКРОВЕНИЕ:** Включи событие, которое не просто двигает сюжет, а усложняет задачу для героев или заставляет их пересмотреть свои цели. Это может быть не крупный сюжетный твист, а локальная, но значимая проблема.
            2. Сцену с живым, прерывистым диалогом
            3. Сенсорную деталь, которая запомнится
            4. Момент внутреннего противоречия персонажа
            5. **МОМЕНТ ДЛЯ ВТОРОСТЕПЕННОГО ГЕРОЯ:** Включи в план короткую сцену или момент, который показывает одного из второстепенных персонажей с неожиданной стороны, раскрывая его личную жизнь или независимую цель, пока главный герой этого не видит.

            {previous_context}
            """
            chapter_plan = self._call_gemini(prompt_2, temperature=0.8, top_p=0.85, top_k=40, use_world_model=True)
            log_chapter('plan', chapter_num, chapter_plan)

            # Этап 3: Черновик главы
            print(f"- Этап 3: Написание черновика Главы {chapter_num}")

            mature_language_instruction = ""
            if ALLOW_MATURE_LANGUAGE:
                mature_language_instruction = """
                ВАЖНО: Если это соответствует миру, персонажам и ситуации, используй аутентичную лексику,
                включая сильные выражения и обсценную лексику. Не цензурируй речь персонажей,
                если это делает их менее правдоподобными.
                """

            # Добавляем случайные вариации в промпт для снижения предсказуемости
            randomizing_elements = [
                "Помни: не каждая сцена должна быть эмоционально насыщенной.",
                "Иногда персонажи делают обыденные вещи без глубокого смысла.",
                "Позволь некоторым диалогам быть простыми и функциональными.",
                "Не все детали должны быть символическими.",
                "Оставь место для тишины и пауз в повествовании."
            ]
            random_note = random.choice(randomizing_elements)

            prompt_3 = f"""
            Напиши черновик Главы {chapter_num}, строго следуя этому плану.

            {random_note}
            {previous_context}

            КРИТИЧЕСКИ ВАЖНЫЕ ПРАВИЛА:

            1. ДИАЛОГИ:
               - Люди перебивают друг друга
               - Используй многоточия, тире для пауз
               - НЕ заканчивай каждую реплику идеально
               - Добавь "эм", "ну", "типа" где уместно
               - Покажи эмоции через ритм речи
               - Иногда люди говорят не то, что думают

            2. ИЗБЕГАЙ ШАБЛОНОВ:
               - "Время остановилось"
               - "Воздух был густым от напряжения"
               - "Тишина была оглушительной"
               - Более 1-2 метафор на главу
               - Идеальной симметрии в описаниях
               - Описания каждого движения персонажа
               - Запах озона

            3. ДОБАВЬ ЖИЗНЕННОСТИ:
               - Неожиданную, но логичную реакцию персонажа
               - Один момент неловкости или случайности
               - Асимметричные детали
               - Сенсорные ощущения: запахи, звуки, текстуры
               - Кто-то может отвлечься или подумать о постороннем
               - Покажи, что второстепенные персонажи существуют и действуют, даже когда главный герой на них не смотрит (через деталь, обрывок их разговора, последствие их действия).

            4. ПОКАЖИ, НЕ РАССКАЗЫВАЙ:
               - Вместо "он был зол" - покажи действие
               - Вместо "она нервничала" - физическая деталь
               - Но не описывай каждый жест

            5. ЕСТЕСТВЕННОСТЬ:
               - Не все происходящее должно быть драматичным
               - Иногда персонажи просто делают то, что нужно
               - Оставь пространство для домыслов читателя

            6. ПУНКТУАЦИЯ:
                - Единый стиль диалогов через тире
                - Не используй кавычки-ёлочки

            7. ТЕМП:
                - В каждом абзаце должно быть пространство: не бойся коротких фраз, пустых строк, пауз.
                - Добавь моменты тишины, ожидания, остановки. Это помогает восприятию.
                - Один абзац на 5–7 строк — максимум. Длинные абзацы дроби, если нет острой необходимости.

            Объем: примерно 4500-5000 слов.

            {mature_language_instruction}

            План Главы {chapter_num}:
            {chapter_plan}
            """
            draft = self._call_gemini(prompt_3, temperature=0.9, top_p=0.95, top_k=60, use_world_model=True)
            log_chapter('draft', chapter_num, draft)

            # Этап 4.1: Критический анализ с детальными проверками
            print(f"- Этап 4.1: Критический анализ Главы {chapter_num}")

            mature_critique_instruction = ""
            if ALLOW_MATURE_LANGUAGE:
                mature_critique_instruction = """

            12. **АУТЕНТИЧНОСТЬ ЯЗЫКА:**
                - Соответствует ли лексика персонажей их социальному положению, профессии, эмоциональному состоянию?
                - Не слишком ли "причесана" речь для данной ситуации?
                - Используются ли естественные для персонажей выражения, включая сильную лексику где уместно?
                """

            prompt_4_1 = f"""
            Ты - строгий редактор, эксперт по стилю, достоверности и логике. Проанализируй черновик по всем критериям:

            СТАНДАРТНЫЙ АНАЛИЗ:
            1. Соответствие сюжету и плану главы
            2. Целостность персонажей, соответствия персонажей их анкетам
            3. Темп и ритм повествования
            4. Стиль и язык
            5. Качество диалогов

            ПРОВЕРКА СОГЛАСОВАННОСТИ:
            6. Соответствие контексту предыдущих глав
            7. Логичность развития персонажей с предыдущими главами
            8. Отсутствие противоречий с установленными фактами
            {previous_context}

            КРИТИЧЕСКАЯ ПРОВЕРКА ДОСТОВЕРНОСТИ:

            9. **ФИЗИЧЕСКАЯ ЛОГИКА:**
               - Каждое описание звука, движения, ощущения - возможно ли это?
               - Пример ошибки: "морось стучала" (морось не может стучать)
               - Пример ошибки: "посмотрел на руки во время болезненной трансформации"

            10. **ПРОСТРАНСТВЕННАЯ ЛОГИКА:**
               - Не телепортируются ли персонажи?
               - Соответствуют ли расстояния времени перемещения?
               - Видит/слышит ли персонаж то, что физически возможно с его позиции?
               - Помещаются ли все объекты в описанном пространстве?
               - Логичны ли направления и перспективы?

            11. **ВРЕМЕННАЯ ЛОГИКА:**
               - Нет ли скачков или дыр во времени?
               - Соответствует ли продолжительность действий их описанию?
               - Может ли персонаж успеть сделать все за указанное время?
               - Логично ли время суток/освещение/погода?
               - Не происходят ли одновременно события, требующие последовательности?

            12. **ФИЗИОЛОГИЧЕСКАЯ ЛОГИКА:**
               - Соответствуют ли реакции организма ситуации?
               - Может ли персонаж физически выдержать описанные нагрузки?
               - Реалистичны ли описания ран, боли, исцеления, трансформации?
               - Логичны ли сенсорные ощущения?

            13. **ПРИЧИННО-СЛЕДСТВЕННЫЕ СВЯЗИ:**
                - Логично ли следуют события друг за другом?
                - Соответствуют ли следствия причинам?
                - Нет ли пропущенных промежуточных этапов?

            14. **ПРОВЕРКА НА ПРИЗНАКИ ИИ:**
                - Есть ли избыточная детализация каждого действия?
                - Слишком ли много эмоционально нагруженных эпитетов?
                - Нет ли механических переходов между абзацами?
                - Говорят ли персонажи слишком "правильно"?
                - Есть ли повторяющиеся речевые конструкции?
                - Есть ли англицизмы в синтаксисе?
                {mature_critique_instruction}

            ИНСТРУКЦИЯ: Для КАЖДОЙ найденной ошибки укажи:
            - Точную цитату проблемного фрагмента
            - Почему это невозможно/нелогично/выглядит искусственно
            - Конкретное предложение по исправлению

            Черновик для анализа:
            {draft}

            """
            critique = self._call_gemini(prompt_4_1, temperature=0.6, top_p=0.8, top_k=25, use_world_model=True)
            log_chapter('critique', chapter_num, critique)

            # Этап 4.2: Внесение правок
            print(f"- Этап 4.2: Редактура и финальная версия Главы {chapter_num}")

            mature_edit_instruction = ""
            if ALLOW_MATURE_LANGUAGE:
                mature_edit_instruction = """

                ЛЕКСИКА: При исправлениях сохраняй аутентичность языка персонажей.
                Не цензурируй их речь, если сильные выражения делают персонажей более правдоподобными.
                """

            prompt_4_2 = f"""
            Перепиши черновик Главы {chapter_num}, учитывая следующие критические замечания.
            Создай финальную, отполированную версию главы.

            ВАЖНО: Обязательно исправь ВСЕ выявленные ошибки логики, физики, времени и пространства.
            Не игнорируй ни одного замечания из критического анализа.

            Единый стиль:
            - Расставь буквы "ё" как положено
            - Все диалоги в одном стиле через тире

            {mature_edit_instruction}

            Критические замечания:
            {critique}

            Оригинальный черновик:
            {draft}
            """
            edited_chapter = self._call_gemini(prompt_4_2, temperature=0.7, top_p=0.85, top_k=35, use_world_model=True)
            log_chapter('edited', chapter_num, edited_chapter)

            # Этап 4.3: Стилистическая обработка + создание резюме
            print(f"- Этап 4.3: Стилистическая обработка и резюме Главы {chapter_num}")

            prompt_4_2_5 = f"""
            Ты — виртуозный писатель и стилист, мастер превращения технически правильных, но сухих текстов в художественную прозу,
            способную захватить читателя с первого абзаца и не отпускать до конца.

            Перепиши главу, сохранив события и диалоги, но сделай текст более живым и естественным.
            Не перегружай метафорами, не стремись к избыточной поэтичности — текст должен быть художественным,
            но лёгким для восприятия. Важно удержать интерес и дать читателю ощущение естественного ритма.

            - В каждом абзаце должно быть пространство: не бойся коротких фраз, пустых строк, пауз.
            - Добавь моменты тишины, ожидания, остановки. Это помогает восприятию.
            - Один абзац на 5–7 строк — максимум. Длинные абзацы дроби, если нет острой необходимости.

            ---

            ### ПРИНЦИПЫ ТРАНСФОРМАЦИИ:

            1. **ЭМОЦИОНАЛЬНОЕ ВОВЛЕЧЕНИЕ:**
               - Каждая сцена должна вызывать конкретную эмоцию
               - Читатель должен ЧУВСТВОВАТЬ то же, что персонаж
               - Используй физиологические проявления: учащённый пульс, онемение, пот, сухость, внезапную тишину
               - Начало абзаца — это крючок, создающий ожидание

            2. **РИТМ И МУЗЫКАЛЬНОСТЬ:**
               - Варьируй длину предложений, создавая дыхание текста
               - Короткие — для напряжения. Длинные — для замедления и погружения
               - Не бойся повторов и ритмических сбоев — они придают тексту жизнь

            3. **ПОГРУЖЕНИЕ ЧЕРЕЗ ДЕТАЛИ:**
               - Не "описывай", а "давай почувствовать"
               - Важно, как герой ощущает сцену: запахи, звуки, тактильные контрасты, температуру
               - Среда — это антагонист или союзник. Локация влияет на поведение

            4. **КИНЕМАТОГРАФИЧНОСТЬ:**
               - Представляй сцену как фильм: движение камеры, фокус, шумы фона
               - Используй крупные планы (рука дрожит), общие (просторная площадь), переходы (дверь скрипит — смена сцены)
               - Замедление времени и акценты важны в пиковые моменты

            5. **ПСИХОЛОГИЧЕСКАЯ ГЛУБИНА:**
               - Не раскрывай мысли напрямую. Лучше — через сомнения, противоречия в действиях, импульсы
               - Герой может думать одно, говорить другое, а делать третье
               - Поток сознания — допустим, но кратко и дозированно

            6. **САСПЕНС И КОНФЛИКТ:**
               - Сцена — это напряжение. Даже если оно не внешнее, а внутреннее
               - Конец сцены — это вопрос, незавершённость, обещание конфликта

            7. **ЗАПРЕЩЁННЫЕ МЕТАФОРЫ:**
                - Тишина была оглушительной
                - Темнота сгустилась
                - Запах озона
                - Воздух дрожал от напряжения
                - Свет струился сквозь пыль
                - Свет пробивался сквозь мутное/грязное стекло
                - Время остановилось
                - Секунды тянулись как вечность
                - Мгновение растянулось
                - Он замер, как вкопанный
                - Мир распался на осколки
                - Сердце сжалось в груди
                - Грудь сдавило ледяной рукой
                - Боль пронзила, как кинжал
                - Его глаза были бездной
                - Её взгляд был ледяным лезвием
                - Взгляд прожигал
                - Солнце лениво выползло из-за горизонта
                - Облака стелились, как ватное одеяло
                - Ветер шептал что-то тревожное
                - Морось стучала по крыше — (морось не может стучать)
                - Он чувствовал, как душа вылетает из тела
                - Холод сжимал его изнутри
                - Тьма внутри него ворочалась
                - Он утопал в своих мыслях
                - Гнев бурлил, как лава

            ### ТЕХНИКИ МАСТЕРСТВА:

            - **Начало сцены:** звук, запах, ощущение, действие — не общее описание
            - **Диалоги:** минимум описательных тегов. Работай жестами, паузами, напряжением
            - **Переходы:** строятся через предмет, движение, звук, реакцию
            - **Кульминации:** резкость, тишина, дисбаланс
            - **Финал:** эхо, тревожность, обратный взгляд, двойной смысл

            ### ЭМОЦИОНАЛЬНАЯ ПАЛИТРА:

            Определи 3–4 ключевые эмоции главы и выстрой их в динамике:
            - Начало — установка состояния
            - Развитие — осложнение, сомнение
            - Пик — срыв, кризис, откровение
            - Конец — новый вектор, но не обязательно решение

            ### ИЗБЕГАЙ:

            - Прямого называния эмоций (“он был зол”, “ей стало грустно”)
            - Наречий в тегах речи (“сказал раздражённо”)
            - Пояснений очевидного (“он понял, что дверь закрыта”)
            - Пассивных оборотов (“было решено”, “казалось, что всё остановилось”)
            - Начала предложений с деепричастий (“Обернувшись, он заметил...”)

            ### ОБЯЗАТЕЛЬНО:

            - Каждый текст нуждается в зонах покоя: разреши абзацу быть пустым, сцене — быть просто бытовой.
            - Один абзац без напряжения на каждые 3–4 — это не ошибка, а стиль.
            - Иногда персонаж может просто сидеть, пить чай, смотреть в окно. Это даёт читателю пространство.
            - Финал главы должен создавать напряжённое ожидание
            - Избегай многослойной метафоричности в каждом абзаце: 1 художественный образ на 2–3 абзаца — достаточно.


            ОБЪЕМ: примерно 4000 слов.

            {mature_language_instruction}

            ---

            ### ТЕКСТ ДЛЯ ПРЕОБРАЗОВАНИЯ:
            {edited_chapter}

            ---

            **ИНСТРУКЦИЯ:**
            Полностью перепиши главу. Сделай из неё литературный текст: живой, ритмичный, эмоциональный. Оставь все события и диалоги, но преобрази подачу — так, чтобы текст воспринимался как высококлассная художественная проза, а не сгенерированный черновик. Читатель должен НЕ СМОЧЬ оторваться.
            """

            enriched_chapter = self._call_gemini(prompt_4_2_5, temperature=0.9, top_p=0.95, top_k=60, use_world_model=True)
            log_chapter('enriched', chapter_num, enriched_chapter)

            prompt_4_3 = f"""
            Ты — опытный литературный редактор, специализирующийся на финальной шлифовке художественных текстов.
            Твоя задача — ДЕЛИКАТНО устранить явные следы машинной генерации, сохранив при этом весь объём,
            художественную ценность и эмоциональную глубину текста.

            ### ПРИНЦИП РАБОТЫ: МИНИМАЛЬНЫЕ ТОЧЕЧНЫЕ ПРАВКИ

            **ВАЖНО**: Это НЕ сокращение текста. Это тонкая шлифовка. Сохраняй 95% оригинального содержания.
            Меняй только то, что явно выдаёт машинную генерацию.

            ### ЧТО ИСПРАВЛЯТЬ (точечно):

            1. **МЕХАНИСТИЧНЫЕ КОНСТРУКЦИИ:**
               - "Он провёл рукой по лицу" → "Ладонь сама коснулась лица"
               - "Она медленно подняла голову" → "Голова поднялась"
               - Убирай только избыточные описания движений, если их много подряд

            2. **СЛИШКОМ "ПРАВИЛЬНЫЕ" ДИАЛОГИ:**
               - Добавь 1-2 "эм", "ну", "блин" в естественных местах
               - Сделай 2-3 фразы незаконченными (многоточия)
               - НЕ переписывай весь диалог, только подправь

            3. **ПОВТОРЯЮЩИЕСЯ РЕЧЕВЫЕ ШАБЛОНЫ:**
               - Если одна конструкция повторяется 3+ раза — варьируй
               - "Он почувствовал, как..." × много раз → часть замени

            4. **ИЗБЫТОЧНУЮ ДЕТАЛИЗАЦИЮ:**
               - Оставь детали, которые работают на атмосферу
               - Убери только те, что создают "каталожность"

            5. **ТЕХНИЧЕСКИЕ ОШИБКИ:**
               - Поставь букву "ё" где нужно
               - Проверь единообразие диалогов (тире vs кавычки)
               - Исправь очевидные ляпы

            6. **СЛИТЫЕ АБЗАЦЫ**:
                - Дроби слишком длинные абзацы
                - Используй визуальный ритм: короткие абзацы создают паузы для дыхания

            7. **ПЕРЕГРУЖЕННЫЕ ОБРАЗЫ**:
                - Если в абзаце 3 и более метафор — сократи до одной.
                - Удали избыточные прилагательные и сравнения.
                - Один сильный образ лучше трёх средних.

            ### ЧТО НЕ ТРОГАТЬ:

            ✅ **СОХРАНЯЙ ПОЛНОСТЬЮ:**
            - Объём текста (должен остаться почти тем же)
            - Все сцены и их последовательность
            - Художественные описания природы, интерьера, состояний
            - Метафоры и образы (если они не банальные)
            - Эмоциональные кульминации
            - Философские рефлексии персонажей
            - Атмосферные детали
            - Диалоги (только минимальная правка)

            ✅ **СТИЛЬ И НАСТРОЕНИЕ:**
            - Ритм повествования
            - Эмоциональную насыщенность
            - Художественную выразительность
            - Литературность языка

            ### АЛГОРИТМ РАБОТЫ:

            1. **Прочитай весь текст** — пойми общую логику и стиль
            2. **Найди явные ИИ-маркеры** — не более 10-15 мест в главе
            3. **Сделай минимальные правки** — 1-2 слова, максимум предложение
            4. **Проверь целостность** — текст должен читаться как оригинальный

            ### ПРИМЕРЫ ПРАВИЛЬНЫХ ПРАВОК:

            **БЫЛО:**
            "Он почувствовал, как по коже пробежал озноб, и дело было не в сквозняке. Это было внутреннее. Он же и нарушил тишину. Голос был незнакомым, глухим, словно исходил не из его горла, а из каменного пола."

            **СТАЛО:**
            "По коже пробежал озноб — не от сквозняка. Что-то внутреннее. Он же нарушил тишину. Голос звучал незнакомо, глухо, будто исходил из каменного пола."

            **БЫЛО:**
            "— Да, — согласился он. — Это действительно так."

            **СТАЛО:**
            "— Да, — он помолчал. — Наверное... так и есть."

            ### РЕЗУЛЬТАТ:

            **ОТРЕДАКТИРОВАННАЯ ГЛАВА:**
            [здесь почти весь исходный текст с минимальными правками]

            **РЕЗЮМЕ ГЛАВЫ {chapter_num}:**
            [краткое резюме в 2–3 предложениях]

            ---

            ### ТЕКСТ ДЛЯ ОБРАБОТКИ:
            {enriched_chapter}

            **НАПОМИНАНИЕ**: Твоя задача — сделать текст на 5-10% более живым и естественным,
            НЕ сокращая его и НЕ меняя художественную ценность. Это тонкая работа ювелира, а не топора дровосека.
            """
            response = self._call_gemini(prompt_4_3, temperature=0.5, top_p=0.8, top_k=20, use_world_model=True)

            # Разделяем ответ на главу и резюме
            if "**РЕЗЮМЕ ГЛАВЫ" in response:
                parts = response.split("**РЕЗЮМЕ ГЛАВЫ")
                final_chapter = parts[0].replace("**ОТРЕДАКТИРОВАННАЯ ГЛАВА:**", "").strip()
                summary_part = parts[1].split(":**", 1)[1].strip() if len(parts[1].split(":**", 1)) > 1 else ""
                chapter_summaries.append(f"Глава {chapter_num}: {summary_part} ...{final_chapter[-1000:]}...")
            else:
                # Если формат не соблюден, используем весь ответ как главу
                final_chapter = response
                # Создаем простое резюме на основе первых строк
                simple_summary = final_chapter[:200] + "..."
                chapter_summaries.append(f"Глава {chapter_num}: {simple_summary}")

            final_chapters_text.append(f"# Глава {chapter_num}\n\n{final_chapter}")
            log_chapter('final', chapter_num, final_chapter)
            print(f"✓ Глава {chapter_num} успешно сгенерирована.")

        return "\n\n---\n\n".join(final_chapters_text)


if __name__ == "__main__":
    if API_KEY == 'ВАШ_API_КЛЮЧ':
        print("Ошибка: Пожалуйста, вставьте ваш API ключ в переменную API_KEY в скрипте.")
    else:
        print("Запуск генератора романа...")
        generator = NovelGenerator(api_key=API_KEY)

        # 1. Создаем фундамент
        generator.create_foundation(SYNOPSIS)

        if not generator.world_bible['chapters']:
            print("! Не удалось извлечь сцены из плана сюжета. Генерация остановлена.")
        else:
            # 2. Генерируем роман
            novel_content = generator.generate_novel(NUM_CHAPTERS)

            # 3. Сохраняем результат
            output_filename = "my_novel.txt"
            with open(output_filename, "w", encoding="utf-8") as f:
                f.write(novel_content)

            print(f"\n🎉 Роман успешно сгенерирован и сохранен в файл: {output_filename}")
